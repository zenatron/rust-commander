# Linux
[tasks.build-linux]
description = "Build for Linux with release profile"
script = [
    "rustup target add x86_64-unknown-linux-gnu",
    "cargo build --target x86_64-unknown-linux-gnu --release"
]

[tasks.rename-linux]
description = "Rename Linux release binary with version"
dependencies = ["build-linux"]
script = [
    '''
    version=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[0].version')
    mv target/x86_64-unknown-linux-gnu/release/rust-commander target/x86_64-unknown-linux-gnu/release/rust-commander-linux-$version || true
    '''
]

# Windows (GNU)
[tasks.build-windows]
description = "Build for Windows with release profile"
script = [
    "rustup target add x86_64-pc-windows-gnu",
    "cargo build --target x86_64-pc-windows-gnu --release"
]

[tasks.rename-windows]
description = "Rename Windows release binary with version"
dependencies = ["build-windows"]
script = [
    '''
    version=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[0].version')
    mv target/x86_64-pc-windows-gnu/release/rust-commander.exe target/x86_64-pc-windows-gnu/release/rust-commander-windows-$version.exe || true
    '''
]

# Raspberry Pi - ARMv7
[tasks.build-rpi]
description = "Build for Raspberry Pi"
script = [
    "rustup target add armv7-unknown-linux-gnueabihf",
    "cross build --target armv7-unknown-linux-gnueabihf --release"
]

[tasks.rename-rpi]
description = "Rename Raspberry Pi release binary with version"
dependencies = ["build-rpi"]
script = [
    '''
    version=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[0].version')
    mv target/armv7-unknown-linux-gnueabihf/release/rust-commander target/armv7-unknown-linux-gnueabihf/release/rust-commander-rpi-$version || true
    '''
]

# Linux and Windows (release)
[tasks.all]
description = "Build for all platforms with release profile"
dependencies = ["rename-linux", "rename-windows", "rename-rpi"]